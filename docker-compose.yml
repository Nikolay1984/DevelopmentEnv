version: "3.2"

services:

  php:
    build:
      context: './docker/php/'
      dockerfile: 'Dockerfile'
      args:
        PHP_VERSION_DOCKERFILE: ${PHP_VERSION}
    container_name: php
    networks:
      - backend
    depends_on:
      - mysql
    volumes:
      - ./public_html/:/var/www/html/

  nginx:
#    TODO напиши build как у сервисов выше
    build: './docker/nginx/'
    container_name: nginx
    networks:
      - backend
    depends_on:
      - php
    ports:
      - "${NGINX_HOST_PORT}:80"
    volumes:
      - ./docker/nginx/log/nginx-access.log:/var/log/nginx/access.log
      - ./docker/nginx/log/nginx-error.log:/var/log/nginx/error.log
      - ./public_html/:/var/www/html/
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/

  mysql:
    build:
      context: './docker/mysql/'
      dockerfile: 'Dockerfile'
      args:
        MYSQL_VERSION_DOCKERFILE: ${MYSQL_VERSION}
    container_name: mysql
    networks:
      - backend
    ports:
      - "3306:3306"
    environment:
#      TODO доделай нормальное подтягивание переменных через .env
      - MYSQL_USER=nik
      - MYSQL_PASSWORD=root
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=test
    volumes:
      - ./docker/mysql/data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password

  phpmyadmin:
    build:
      context: './docker/phpmyadmin/'
      dockerfile: 'Dockerfile'
    container_name: phpmyadmin
    networks:
      - backend
    depends_on:
      - mysql
    ports:
      - "8081:80"
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=mysql

networks:
  backend:
    driver: bridge